# This is a basic workflow to help you get started with Actions

name: Auto-CI-dev

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
#  push:
#    branches: [ "dev" ]
#  pull_request:
#    branches: [ "dev" ]
   schedule:
     # UTC time 3:00 = 5:00 CET
     - cron: '19 3 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-amd64:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: dev
      - name: build image - AMD64
        run: |
          docker build --rm -t croc/unimus . || { echo "docker image build failed - amd64"; exit 1; }
          docker tag croc/unimus croc/unimus:dev
          docker tag croc/unimus quay.io/croc/unimus:dev
          docker images croc/unimus
      - name: push container
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
          QUAYIO_USER: ${{ secrets.QUAYIO_USER }}
          QUAYIO_PASS: ${{ secrets.QUAYIO_PASS }}
        run: |
          docker images
          echo "$DOCKERHUB_PASS" | docker login --username=$DOCKERHUB_USER --password-stdin
          echo "$QUAYIO_PASS" | docker login --username=$QUAYIO_USER --password-stdin quay.io
          docker images | grep -i unimus
          docker push croc/unimus:dev
          docker push quay.io/croc/unimus:dev
  build-arm64:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: dev
      # buildx with quemu
      - name: qemu setup for buildx for arm build
        uses: docker/setup-qemu-action@v2
      - name: setup buildx for arm build
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: build image - ARM 64bit
        env:
          ARCH: ARM
        run: |
          echo "Buildx supported platforms: ${{ steps.buildx.outputs.platforms }}"

          docker build --rm --platform linux/arm64 -t croc/unimus-arm64 . || { echo "docker image build failed - arm64"; exit 1; }
          docker tag croc/unimus-arm64 croc/unimus-arm64:dev
          docker tag croc/unimus-arm64 quay.io/croc/unimus-arm64:dev
          docker images croc/unimus-arm64
      - name: push container
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
          QUAYIO_USER: ${{ secrets.QUAYIO_USER }}
          QUAYIO_PASS: ${{ secrets.QUAYIO_PASS }}
        run: |
          docker images
          echo "$DOCKERHUB_PASS" | docker login --username=$DOCKERHUB_USER --password-stdin
          echo "$QUAYIO_PASS" | docker login --username=$QUAYIO_USER --password-stdin quay.io
          docker images | grep -i unimus-arm64
          docker push croc/unimus-arm64:dev
          docker push quay.io/croc/unimus-arm64:dev